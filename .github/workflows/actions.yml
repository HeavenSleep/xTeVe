name: Go Cross-Compile and Release

on:
  push:
    branches:
      - '*'
    tags:
      - 'v*'  # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches:
      - '*'

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'  # Specify the Go version you need

    - name: Set app name
      run: echo "APP_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV

    - name: Build for Linux ARM v7
      run: GOOS=linux GOARCH=arm GOARM=7 go build -o ${{ env.APP_NAME }} .
      
    - name: Create tar.gz archive
      run: tar -czf ${{ env.APP_NAME }}-linux-armv7.tar.gz ${{ env.APP_NAME }}

    - name: Upload artifact
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.APP_NAME }}-linux-armv7.tar.gz
        path: ${{ env.APP_NAME }}-linux-armv7.tar.gz

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set app name
      run: echo "APP_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV

    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: ${{ env.APP_NAME }}-linux-armv7.tar.gz

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ env.APP_NAME }}-linux-armv7.tar.gz
        asset_name: ${{ env.APP_NAME }}-linux-armv7.tar.gz
        asset_content_type: application/gzip